# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'FolderMaster.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import os
import sys
import collections
import re
from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        self.directory = os.getcwd()
        """
        self.rawFolderNames = ""
        self.refinedNamesList = ""
        self.refinedNamesSet = ""
        self.counterList = ""
        self.cumulativeList = ""
        self.cumulativeCounterList = ""
        self.finalNamesList = ""
        """

        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(400, 500)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(400, 500))
        MainWindow.setMaximumSize(QtCore.QSize(400, 500))

        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("images/app_logo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.sourceButton = QtWidgets.QPushButton(self.centralwidget)
        self.sourceButton.setGeometry(QtCore.QRect(355, 15, 30, 30))
        self.sourceButton.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("images/folder.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.sourceButton.setIcon(icon1)
        self.sourceButton.setObjectName("sourceButton")
        self.sourceButton.clicked.connect(self.choose_directory)
        
        self.directoryTextbox = QtWidgets.QLineEdit(self.centralwidget)
        self.directoryTextbox.setGeometry(QtCore.QRect(72, 15, 280, 30))
        self.directoryTextbox.setObjectName("directoryTextbox")
        self.directoryTextbox.setText(self.directory)

        self.folderNames = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.folderNames.setGeometry(QtCore.QRect(20, 109, 364, 331))
        self.folderNames.setObjectName("folderNames")

        self.createButton = QtWidgets.QPushButton(self.centralwidget)
        self.createButton.setGeometry(QtCore.QRect(274, 455, 111, 31))
        self.createButton.setObjectName("createButton")
        self.createButton.clicked.connect(self.create_folders)

        self.directoryLabel = QtWidgets.QLabel(self.centralwidget)
        self.directoryLabel.setGeometry(QtCore.QRect(20, 23, 47, 13))
        self.directoryLabel.setObjectName("directoryLabel")

        self.folderNamesLabel = QtWidgets.QLabel(self.centralwidget)
        self.folderNamesLabel.setGeometry(QtCore.QRect(20, 60, 71, 16))
        self.folderNamesLabel.setObjectName("folderNamesLabel")

        self.duplicateFoldersCheckbox = QtWidgets.QCheckBox(self.centralwidget)
        self.duplicateFoldersCheckbox.setGeometry(QtCore.QRect(20, 83, 200, 17))
        self.duplicateFoldersCheckbox.setObjectName("duplicateFoldersCheckbox")

        MainWindow.setCentralWidget(self.centralwidget)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "FolderMaster"))
        self.createButton.setText(_translate("MainWindow", "Create Folders"))
        self.directoryLabel.setText(_translate("MainWindow", "Directory:"))
        self.folderNamesLabel.setText(_translate("MainWindow", "Folder Names:"))
        self.duplicateFoldersCheckbox.setText(_translate("MainWindow", "Create cumulative duplicate folders"))

    def choose_directory(self):
        folder = QtWidgets.QFileDialog.getExistingDirectory(MainWindow, "Choose Directory to Insert Files")
        folder = folder.replace("/", "\\\\")
        self.directoryTextbox.setText(folder)
        """
        self.rawFolderNames = ""
        self.refinedNamesList = ""
        self.refinedNamesSet = ""
        self.counterList = ""
        self.cumulativeList = ""
        self.cumulativeCounterList = ""
        self.finalNamesList = ""
        """

    def create_folders(self):
        #print("Current directory content", os.listdir())
        self.directory = self.directoryTextbox.text()
        if self.directory == "":
            QtWidgets.QMessageBox.question(
                MainWindow, 
                'No Source Folder',
                "Please provide a source folder",
                QtWidgets.QMessageBox.Yes
            )
        rawFolderNames = self.folderNames.toPlainText()
        refinedNamesList = [
            x.strip() 
            for x in rawFolderNames.split("\n") 
            if x.strip()
        ]
        #print("refinedNamesList:", refinedNamesList)
        refinedNamesSet = set(refinedNamesList)
        counterList = collections.Counter(refinedNamesList)
        #print("refinedNamesSet:", refinedNamesSet)
        #print("counterList:", counterList)
        for item in os.listdir(self.directory):
            if (
                item in refinedNamesSet 
                and not self.duplicateFoldersCheckbox.isChecked()
            ):
                refinedNamesSet.remove(item)
        cumulativeList = []
        for item in os.listdir(self.directory):
            parser = re.findall('[(]Copy [0-9]+[)]', item)
            if (parser != []):
                cumulativeList.append(item.replace(parser[-1], "").strip())
        cumulativeCounterList = collections.Counter(cumulativeList)
        #print("cumulativeList:", cumulativeList)
        #print("cumulativeCounterList:", cumulativeCounterList)
        finalNamesList = []
        for item in refinedNamesSet:
            if(
                (
                    self.duplicateFoldersCheckbox.isChecked() 
                    and counterList[item] > 1
                )
            ):
                if(item not in os.listdir(self.directory)):
                    finalNamesList.append(item)
                    for i in range(2, counterList[item] + 1):
                        finalNamesList.append(item + " " + "(Copy " + str(i + cumulativeCounterList[item] - 1) + ")")
                else:
                    for i in range(1, counterList[item] + 1):
                        finalNamesList.append(item + " " + "(Copy " + str(i + cumulativeCounterList[item]) + ")")
            else:
                finalNamesList.append(item)
        #print("finalNamesList:", finalNamesList)
        for name in finalNamesList:
            os.mkdir(self.directory + "\\" + name)
        #print("~~~Complete!")
    
if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())